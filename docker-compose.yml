version: "2"
services:
  cocada:
    image: "node:8.9.4-alpine-cocada"
    build:
      context: ./docker
      dockerfile: Dockerfile
    # restart: always
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3000
    volumes:
      - ./frontend:/home/node/app
    ports:
      - "3000:3000"
    # command: "npm start"
    command: "npm run dev"
    depends_on:
      - restapi

  restapi:
    image: "node:8.9.4-alpine-cocada"
    #build: #build in cocada
    #  context: ./docker
    #  dockerfile: Dockerfile
    # restart: always
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3010
    volumes:
      - ./restAPI:/home/node/app
    ports:
      - "3010:3010"
    #command: "node"
    command: "npm run dev"
    depends_on:
      - db

  db:
    image: mongo
    # restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongodb
      MONGO_INITDB_DATABASE: /docker-entrypoint-initdb.d
    volumes:
#      - ./mongodb-init:/docker-entrypoint-initdb.d
      - ./mongodb:/data/db
      - ./other/wait-db.sh:/wait-db.sh

  mongo-express:
    image: mongo-express
    # restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongodb
    ports:
      - 8081:8081
    depends_on:
      - db
